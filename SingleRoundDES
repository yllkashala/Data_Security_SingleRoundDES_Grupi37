#include <bits/stdc++.h>
#include <iostream>
using namespace std;

// decimal to binary conversion-
string dec2bin(string s)
{
unordered_map<char, string> mp;
mp['0'] = "0000";
mp['1'] = "0001";
mp['2'] = "0010";
mp['3'] = "0011";
mp['4'] = "0100";
mp['5'] = "0101";
mp['6'] = "0110";
mp['7'] = "0111";
mp['8'] = "1000";
mp['9'] = "1001";
string bin = "";
for (int i = 0; i < s.size(); i++) {
bin += mp[s[i]];
}
return bin;
}

// binary to decimal conversion  
string bin2dec(string s)
{
unordered_map<string, string> mp;
mp["0000"] = "0";
mp["0001"] = "1";
mp["0010"] = "2";
mp["0011"] = "3";
mp["0100"] = "4";
mp["0101"] = "5";
mp["0110"] = "6";
mp["0111"] = "7";
mp["1000"] = "8";
mp["1001"] = "9";
string dec = "";
for (int i = 0; i < s.length(); i += 4) {
string ch = "";
ch += s[i];
ch += s[i + 1];
ch += s[i + 2];
ch += s[i + 3];
dec += mp[ch];
}
return dec;
}

//permutation ------------------------------
string permute(string k, int* arr, int n)
{
string per = "";
for (int i = 0; i < n; i++) {
per += k[arr[i] - 1];
}
return per;
}

//shift left ------------------------------
string shift_left(string k, int shifts)
{
string s = "";
for (int i = 0; i < shifts; i++) {
for (int j = 1; j < 28; j++) {
s += k[j];
}
s += k[0];
k = s;
s = "";
}
return k;
}

//XOR operation
string xor_(string a, string b)
{
string ans = "";
for (int i = 0; i < a.size(); i++) {
if (a[i] == b[i]) {
ans += "o";
}
else {
ans += "1";
}
}
return ans;
   
}
